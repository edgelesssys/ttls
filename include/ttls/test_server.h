#pragma once

#include <condition_variable>
#include <mutex>
#include <thread>

namespace edgeless::ttls {

const std::string SERVER_CRT =
    "-----BEGIN CERTIFICATE-----\r\n"
    "MIIFPTCCAyUCFGxTAqu17VuIGJLkl6q/hnYANzEOMA0GCSqGSIb3DQEBCwUAMFox\r\n"
    "CzAJBgNVBAYTAlVTMQ4wDAYDVQQIDAVTdGF0ZTENMAsGA1UEBwwEQ2l0eTEMMAoG\r\n"
    "A1UECgwDT3JnMQwwCgYDVQQLDANPcmcxEDAOBgNVBAMMB1Rlc3QgQ0EwHhcNMjEw\r\n"
    "MzA4MDQwMzM3WhcNMjEwNDA3MDQwMzM3WjBcMQswCQYDVQQGEwJVUzEOMAwGA1UE\r\n"
    "CAwFU3RhdGUxDTALBgNVBAcMBENpdHkxDDAKBgNVBAoMA09yZzEMMAoGA1UECwwD\r\n"
    "T3JnMRIwEAYDVQQDDAlsb2NhbGhvc3QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw\r\n"
    "ggIKAoICAQCy5R4P8xAobPxIng3+wQOs1hdqVR1QWKWPEkh5zr11rf+wL+rZbD4t\r\n"
    "YhpUP+/TOLL2Ttc7+0J7B4aRSiwpe8ipTBKedUtL+kIB4QHVQ5FyVqzmDE5ENllc\r\n"
    "9rCM1ox22YCOzNj7mPOgnHXfu7/jHMiYg5oRlC902+VMJDn+P6M6UYACuSr95t3d\r\n"
    "B6Ec5YQWNzh6fygEB+qbzMnRClJ5bEx1xWU4xU4jwB9XCNrlHidMrF4czc4/s68C\r\n"
    "L4AT032Tk5bVlgsTxEkG9541fFKSsv+4bjEQettOfXWTeJiKRoIynbdOsyLyGsEx\r\n"
    "rx7iocwSASATq2GeKToq9gxdqvR7DCVQveFuvOF987moUC/uBwrg4+xd2CXwiVjH\r\n"
    "I+zIDD/9nJcstowaGeeLWaChQXJ2OnhDJLn5l/UVnCN8gj7E5t4e3p7PhwOgzX0h\r\n"
    "1TZKKMORKVDvJitumRuyzyEcUx3tEStF7oCq0ja0VCcBOBX8tAbGGm+eFuibpuND\r\n"
    "6wreShIC8kKdcgUJcY0tA89PEvpw1dwIkF2Tr2yIM7je2w0Q319oZlc1E0KvRvi5\r\n"
    "wC/oRLkj0msoTyqHjSDT+j22y1lb+W6/o2JCgjzHHCs+SMbW206NTAC7zdWPOZyT\r\n"
    "Aww+x6SA5eso9+ZTDUTLjYxayTrPDBEWvo/4np3wG+rBZ8XZkHRWdQIDAQABMA0G\r\n"
    "CSqGSIb3DQEBCwUAA4ICAQCu7W8doSMEDZIESlN9MDSgRUoS7kXPmbbdKnsOUvXe\r\n"
    "xd55TXYC3Mqq521oL4uarwZImF+Rr0aWsG7sxGvYeghqaD+WXRlz/n/ObkEsCCdn\r\n"
    "IxxesAXFIkdcQ7MRdEjnCznR3Vi3D9UQQ9pC1IYZiTIZEdWGaCFPgkAEyXjiGdC2\r\n"
    "9E61jyDn6JCsQ+nFrfnpuGOkCIukUuEEPEWh+0Wt1S8wA+yomsBUhpkEmufsjdhd\r\n"
    "EV9P4lBbtMnwu7PWHTytq/qGdGuuA8UlKxUCPrX/n7RCFo1TF0sPFAWtazhPmSkS\r\n"
    "Ghbnem6pPNSA1appGJFC9nK1XrVa8JIZKdG7RqtU3u9+HXMAZeANsqIHP8VplSSf\r\n"
    "2e3cUM/qh4BLlFL6XdNkWDKJ2EUkv3jpOeJuYiymiovhO2V/xcFPjZ0BOsG+DAcn\r\n"
    "1SPhztZMyqypRWApVio8vtAV1qbfr+sBkxKxUnOA6KUlHCY+IVBzVgJPS5eSzULG\r\n"
    "0h/BbaFWOHs/e4yICrNXLnKIYhEEaexH0IRep3q0uM1v7PlXArociokQ1TKdC9eu\r\n"
    "FVv0pYjgDKjxkct9L6n5SonKVYwxdOnAnpas4RQTwT/DRoWp9eSUrgccgbAZmEZm\r\n"
    "0JBZuNCkKEUc/jzOop6pG3KyMroUuIXwUT7jpn602bGULMcGnHTunOIIXfN1jZkv\r\n"
    "Nw==\r\n"
    "-----END CERTIFICATE-----\r\n";
const std::string CA_CRT =
    "-----BEGIN CERTIFICATE-----\r\n"
    "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\r\n"
    "7Oe8km7JBDiS8Av4cPe9\r\n"
    "-----END CERTIFICATE-----\r\n";
const std::string SERVER_KEY =
    "-----BEGIN PRIVATE KEY-----\r\n"
    "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\r\n"
    "qjWS+IbdheP21B9ucjV99Z2GX3icIN4=\r\n"
    "-----END PRIVATE KEY-----\r\n";

/**
 * Starts a tls test server and waits for it to be ready.
 * @return newly created thread
 */
std::thread StartTestServer();
}  // namespace edgeless::ttls
